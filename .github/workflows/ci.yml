name: Nuenv

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # Build the Docker image using Nix
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
    runs-on: ${{ matrix.os }}
    environment: build
    steps:
      - name: git checkout
        uses: actions/checkout@v3

      - uses: DeterminateSystems/nix-installer-action@v1
        with:
          extra-conf: |
            binary-caches = https://cache.nixos.org https://${{ secrets.CACHIX_CACHE }}.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= ${{ secrets.CACHIX_TRUSTED_PUBLIC_KEY }}
            trusted-substituters = https://cache.nixos.org https://${{ secrets.CACHIX_CACHE }}.cachix.org

      - name: Set up Nix environment
        run: |
          nix develop ".#ci" --command direnv allow
          eval "$(nix develop ".#ci" --command direnv export bash)"
          echo "$PATH" >> $GITHUB_PATH

      - name: Binary cache setup
        run: |
          cachix authtoken ${{ secrets.CACHIX_AUTH_TOKEN }}
          cachix use ${{ secrets.CACHIX_CACHE }}

      - name: Build Nuenv derivation
        run: |
          nix build --print-build-logs
          cat result/share/hello.txt

      - name: Build auto-magical Rust derivation
        run: |
          nix build --print-build-logs .#auto
          ./result/bin/say-hello

      - name: Build Rust + Wasm example using Nuenv
        run: |
          nix build --print-build-logs .#wasm
          nix develop .#wasm --command wasmtime ./result/bin/rust-wasm-example.wasm "Nix superstar"

      - name: Run hello-wasm program
        run: |
          nix run .#hello-wasm -- "Nix superstar"

      - name: Build Nuenv derivation with no debug output
        run: |
          nix build --print-build-logs .#helloNoDebug
          cat result/share/hello.txt

      - name: Build Nuenv derivation directly (not from overlay)
        run: |
          nix build --print-build-logs .#direct
          cat result/share/nushell-version.txt

      - name: Build stdenv derivation that depends on Nuenv derivation
        run: |
          nix build --print-build-logs .#other
          cat result/share/copied.txt

      - name: Build Nuenv derivation that pulls sources from GitHub
        run: |
          nix build --print-build-logs .#githubSrc
          cat result/share/README.md

      - name: Build stdenv derivation that mimics Nuenv derivation
        run: |
          nix build --print-build-logs .#stdenv
          cat result/share/hello.txt

      - name: Cache development environment
        run: |
          nix develop ".#ci" --profile nuenv-ci-profile
          cachix push ${{ secrets.CACHIX_CACHE }} nuenv-ci-profile

      - name: Cache build artifacts
        run: |
          nix flake archive --json \
            | jq -r '.path,(.inputs|to_entries[].value.path)' \
            | cachix push "${{ secrets.CACHIX_CACHE }}"
